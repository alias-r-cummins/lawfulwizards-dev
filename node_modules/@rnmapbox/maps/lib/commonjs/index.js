"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Animated", {
  enumerable: true,
  get: function () {
    return _Animated.default;
  }
});
Object.defineProperty(exports, "AnimatedCoordinatesArray", {
  enumerable: true,
  get: function () {
    return _classes.AnimatedCoordinatesArray;
  }
});
Object.defineProperty(exports, "AnimatedExtractCoordinateFromArray", {
  enumerable: true,
  get: function () {
    return _classes.AnimatedExtractCoordinateFromArray;
  }
});
exports.AnimatedMapPoint = void 0;
Object.defineProperty(exports, "AnimatedPoint", {
  enumerable: true,
  get: function () {
    return _classes.AnimatedPoint;
  }
});
Object.defineProperty(exports, "AnimatedRouteCoordinatesArray", {
  enumerable: true,
  get: function () {
    return _classes.AnimatedRouteCoordinatesArray;
  }
});
Object.defineProperty(exports, "AnimatedShape", {
  enumerable: true,
  get: function () {
    return _classes.AnimatedShape;
  }
});
Object.defineProperty(exports, "Annotation", {
  enumerable: true,
  get: function () {
    return _Annotation.default;
  }
});
Object.defineProperty(exports, "Atmosphere", {
  enumerable: true,
  get: function () {
    return _Atmosphere.Atmosphere;
  }
});
Object.defineProperty(exports, "BackgroundLayer", {
  enumerable: true,
  get: function () {
    return _BackgroundLayer.default;
  }
});
Object.defineProperty(exports, "Callout", {
  enumerable: true,
  get: function () {
    return _Callout.default;
  }
});
Object.defineProperty(exports, "Camera", {
  enumerable: true,
  get: function () {
    return _Camera.Camera;
  }
});
Object.defineProperty(exports, "CircleLayer", {
  enumerable: true,
  get: function () {
    return _CircleLayer.default;
  }
});
Object.defineProperty(exports, "FillExtrusionLayer", {
  enumerable: true,
  get: function () {
    return _FillExtrusionLayer.default;
  }
});
Object.defineProperty(exports, "FillLayer", {
  enumerable: true,
  get: function () {
    return _FillLayer.default;
  }
});
Object.defineProperty(exports, "HeatmapLayer", {
  enumerable: true,
  get: function () {
    return _HeatmapLayer.default;
  }
});
Object.defineProperty(exports, "ImageSource", {
  enumerable: true,
  get: function () {
    return _ImageSource.default;
  }
});
Object.defineProperty(exports, "Images", {
  enumerable: true,
  get: function () {
    return _Images.default;
  }
});
Object.defineProperty(exports, "Light", {
  enumerable: true,
  get: function () {
    return _Light.default;
  }
});
exports.LineJoin = void 0;
Object.defineProperty(exports, "LineLayer", {
  enumerable: true,
  get: function () {
    return _LineLayer.default;
  }
});
Object.defineProperty(exports, "Logger", {
  enumerable: true,
  get: function () {
    return _Logger.default;
  }
});
Object.defineProperty(exports, "MapView", {
  enumerable: true,
  get: function () {
    return _MapView.default;
  }
});
Object.defineProperty(exports, "MarkerView", {
  enumerable: true,
  get: function () {
    return _MarkerView.default;
  }
});
Object.defineProperty(exports, "PointAnnotation", {
  enumerable: true,
  get: function () {
    return _PointAnnotation.default;
  }
});
Object.defineProperty(exports, "RasterDemSource", {
  enumerable: true,
  get: function () {
    return _RasterDemSource.default;
  }
});
Object.defineProperty(exports, "RasterLayer", {
  enumerable: true,
  get: function () {
    return _RasterLayer.default;
  }
});
Object.defineProperty(exports, "RasterSource", {
  enumerable: true,
  get: function () {
    return _RasterSource.default;
  }
});
Object.defineProperty(exports, "ShapeSource", {
  enumerable: true,
  get: function () {
    return _ShapeSource.ShapeSource;
  }
});
Object.defineProperty(exports, "SkyLayer", {
  enumerable: true,
  get: function () {
    return _SkyLayer.default;
  }
});
Object.defineProperty(exports, "Style", {
  enumerable: true,
  get: function () {
    return _Style.default;
  }
});
Object.defineProperty(exports, "SymbolLayer", {
  enumerable: true,
  get: function () {
    return _SymbolLayer.SymbolLayer;
  }
});
Object.defineProperty(exports, "Terrain", {
  enumerable: true,
  get: function () {
    return _Terrain.Terrain;
  }
});
Object.defineProperty(exports, "UserLocation", {
  enumerable: true,
  get: function () {
    return _UserLocation.default;
  }
});
Object.defineProperty(exports, "VectorSource", {
  enumerable: true,
  get: function () {
    return _VectorSource.default;
  }
});
exports.default = void 0;
Object.defineProperty(exports, "getAnnotationsLayerID", {
  enumerable: true,
  get: function () {
    return _getAnnotationsLayerID.getAnnotationsLayerID;
  }
});
Object.defineProperty(exports, "locationManager", {
  enumerable: true,
  get: function () {
    return _locationManager.default;
  }
});
Object.defineProperty(exports, "offlineManager", {
  enumerable: true,
  get: function () {
    return _offlineManager.default;
  }
});
Object.defineProperty(exports, "snapshotManager", {
  enumerable: true,
  get: function () {
    return _snapshotManager.default;
  }
});
var _reactNative = require("react-native");
var _Camera = require("./components/Camera");
var _Atmosphere = require("./components/Atmosphere");
var _MapView = _interopRequireDefault(require("./components/MapView"));
var _Light = _interopRequireDefault(require("./components/Light"));
var _PointAnnotation = _interopRequireDefault(require("./components/PointAnnotation"));
var _Annotation = _interopRequireDefault(require("./components/annotations/Annotation"));
var _Callout = _interopRequireDefault(require("./components/Callout"));
var _UserLocation = _interopRequireDefault(require("./components/UserLocation"));
var _VectorSource = _interopRequireDefault(require("./components/VectorSource"));
var _ShapeSource = require("./components/ShapeSource");
var _RasterSource = _interopRequireDefault(require("./components/RasterSource"));
var _RasterDemSource = _interopRequireDefault(require("./components/RasterDemSource"));
var _ImageSource = _interopRequireDefault(require("./components/ImageSource"));
var _Images = _interopRequireDefault(require("./components/Images"));
var _FillLayer = _interopRequireDefault(require("./components/FillLayer"));
var _FillExtrusionLayer = _interopRequireDefault(require("./components/FillExtrusionLayer"));
var _HeatmapLayer = _interopRequireDefault(require("./components/HeatmapLayer"));
var _LineLayer = _interopRequireDefault(require("./components/LineLayer"));
var _CircleLayer = _interopRequireDefault(require("./components/CircleLayer"));
var _SkyLayer = _interopRequireDefault(require("./components/SkyLayer"));
var _SymbolLayer = require("./components/SymbolLayer");
var _RasterLayer = _interopRequireDefault(require("./components/RasterLayer"));
var _BackgroundLayer = _interopRequireDefault(require("./components/BackgroundLayer"));
var _Terrain = require("./components/Terrain");
var _locationManager = _interopRequireDefault(require("./modules/location/locationManager"));
var _offlineManager = _interopRequireDefault(require("./modules/offline/offlineManager"));
var _snapshotManager = _interopRequireDefault(require("./modules/snapshot/snapshotManager"));
var _MarkerView = _interopRequireDefault(require("./components/MarkerView"));
var _Animated = _interopRequireDefault(require("./utils/animated/Animated"));
var _classes = require("./classes");
var _Style = _interopRequireDefault(require("./components/Style"));
var _Logger = _interopRequireDefault(require("./utils/Logger"));
var _deprecation = require("./utils/deprecation");
var _requestAndroidLocationPermissions = require("./requestAndroidLocationPermissions");
var _getAnnotationsLayerID = require("./utils/getAnnotationsLayerID");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const MapboxGL = {
  ..._reactNative.NativeModules.MGLModule
};

// static methods
MapboxGL.requestAndroidLocationPermissions = _requestAndroidLocationPermissions.requestAndroidLocationPermissions;
MapboxGL.UserTrackingModes = _Camera.UserTrackingMode;

// components
MapboxGL.MapView = _MapView.default;
MapboxGL.Light = _Light.default;
MapboxGL.PointAnnotation = _PointAnnotation.default;
MapboxGL.Callout = _Callout.default;
MapboxGL.UserLocation = _UserLocation.default;
MapboxGL.Camera = _Camera.Camera;
MapboxGL.Style = _Style.default;

// classes
MapboxGL.AnimatedPoint = _classes.AnimatedPoint;
MapboxGL.AnimatedMapPoint = (0, _deprecation.deprecatedClass)(_classes.AnimatedPoint, 'AnimatedMapPoint is deprecated please use AnimatedPoint');
MapboxGL.AnimatedShape = _classes.AnimatedShape;
MapboxGL.AnimatedCoordinatesArray = _classes.AnimatedCoordinatesArray;
MapboxGL.AnimatedExtractCoordinateFromArray = _classes.AnimatedExtractCoordinateFromArray;
MapboxGL.AnimatedRouteCoordinatesArray = _classes.AnimatedRouteCoordinatesArray;

// annotations
MapboxGL.Annotation = _Annotation.default;
MapboxGL.MarkerView = _MarkerView.default;

// sources
MapboxGL.VectorSource = _VectorSource.default;
MapboxGL.ShapeSource = _ShapeSource.ShapeSource;
MapboxGL.RasterSource = _RasterSource.default;
MapboxGL.ImageSource = _ImageSource.default;
MapboxGL.Images = _Images.default;
MapboxGL.RasterDemSource = _RasterDemSource.default;

// layers
MapboxGL.FillLayer = _FillLayer.default;
MapboxGL.FillExtrusionLayer = _FillExtrusionLayer.default;
MapboxGL.HeatmapLayer = _HeatmapLayer.default;
MapboxGL.LineLayer = _LineLayer.default;
MapboxGL.CircleLayer = _CircleLayer.default;
MapboxGL.SkyLayer = _SkyLayer.default;
MapboxGL.SymbolLayer = _SymbolLayer.SymbolLayer;
MapboxGL.RasterLayer = _RasterLayer.default;
MapboxGL.BackgroundLayer = _BackgroundLayer.default;
MapboxGL.Terrain = _Terrain.Terrain;
MapboxGL.Atmosphere = _Atmosphere.Atmosphere;

// modules
MapboxGL.locationManager = _locationManager.default;
MapboxGL.offlineManager = _offlineManager.default;
MapboxGL.snapshotManager = _snapshotManager.default;

// animated
MapboxGL.Animated = _Animated.default;
MapboxGL.Animated.RouteCoordinatesArray = _classes.AnimatedRouteCoordinatesArray; // For backwards compatibiilty.
MapboxGL.Animated.ExtractCoordinateFromArray = _classes.AnimatedExtractCoordinateFromArray; // For backwards compatibiilty.

// utils
MapboxGL.Logger = _Logger.default;
MapboxGL.getAnnotationsLayerID = _getAnnotationsLayerID.getAnnotationsLayerID;
const {
  LineJoin
} = MapboxGL;
exports.LineJoin = LineJoin;
const AnimatedMapPoint = _classes.AnimatedPoint; // For backwards compatibiilty.
exports.AnimatedMapPoint = AnimatedMapPoint;
var _default = MapboxGL;
exports.default = _default;
//# sourceMappingURL=index.js.map