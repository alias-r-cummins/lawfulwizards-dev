function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
import React from 'react';
import PropTypes from 'prop-types';
import { NativeModules, requireNativeComponent } from 'react-native';
import { viewPropTypes } from '../utils';
import { SkyLayerStyleProp } from '../utils/styleMap';
import AbstractLayer from './AbstractLayer';
const MapboxGL = NativeModules.MGLModule;
export const NATIVE_MODULE_NAME = 'RCTMGLSkyLayer';

/**
 * SkyLayer is a spherical dome around the map that is always rendered behind all other layers
 */
class SkyLayer extends AbstractLayer {
  render() {
    return /*#__PURE__*/React.createElement(RCTMGLSkyLayer, _extends({
      testID: "rctmglSkyLayer",
      ref: this.setNativeLayer
    }, this.baseProps));
  }
}
_defineProperty(SkyLayer, "propTypes", {
  ...viewPropTypes,
  /**
   * A string that uniquely identifies the source in the style to which it is added.
   */
  id: PropTypes.string.isRequired,
  /**
   * The source from which to obtain the data to style.
   * If the source has not yet been added to the current style, the behavior is undefined.
   */
  sourceID: PropTypes.string,
  /**
   * Inserts a layer above aboveLayerID.
   */
  aboveLayerID: PropTypes.string,
  /**
   * Inserts a layer below belowLayerID
   */
  belowLayerID: PropTypes.string,
  /**
   * Inserts a layer at a specified index
   */
  layerIndex: PropTypes.number,
  /**
   *  Filter only the features in the source layer that satisfy a condition that you define
   */
  filter: PropTypes.array,
  /**
   * Customizable style attributes
   */
  style: PropTypes.oneOfType([SkyLayerStyleProp, PropTypes.arrayOf(SkyLayerStyleProp)])
});
_defineProperty(SkyLayer, "defaultProps", {
  sourceID: MapboxGL.StyleSource.DefaultSourceID
});
const RCTMGLSkyLayer = requireNativeComponent(NATIVE_MODULE_NAME, SkyLayer, {
  nativeOnly: {
    reactStyle: true
  }
});
export default SkyLayer;
//# sourceMappingURL=SkyLayer.js.map